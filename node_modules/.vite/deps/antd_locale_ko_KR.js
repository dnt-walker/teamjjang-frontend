import {
  __commonJS
} from "./chunk-G3PMV62Z.js";

// node_modules/@babel/runtime/helpers/interopRequireDefault.js
var require_interopRequireDefault = __commonJS({
  "node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }
    module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/rc-pagination/lib/locale/ko_KR.js
var require_ko_KR = __commonJS({
  "node_modules/rc-pagination/lib/locale/ko_KR.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var locale = {
      // Options
      items_per_page: "/ 페이지",
      jump_to: "이동하기",
      jump_to_confirm: "확인하다",
      page: "페이지",
      // Pagination
      prev_page: "이전 페이지",
      next_page: "다음 페이지",
      prev_5: "이전 5 페이지",
      next_5: "다음 5 페이지",
      prev_3: "이전 3 페이지",
      next_3: "다음 3 페이지",
      page_size: "페이지 크기"
    };
    var _default = exports.default = locale;
  }
});

// node_modules/@babel/runtime/helpers/typeof.js
var require_typeof = __commonJS({
  "node_modules/@babel/runtime/helpers/typeof.js"(exports, module) {
    function _typeof(o) {
      "@babel/helpers - typeof";
      return module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof(o);
    }
    module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/toPrimitive.js
var require_toPrimitive = __commonJS({
  "node_modules/@babel/runtime/helpers/toPrimitive.js"(exports, module) {
    var _typeof = require_typeof()["default"];
    function toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    module.exports = toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/toPropertyKey.js
var require_toPropertyKey = __commonJS({
  "node_modules/@babel/runtime/helpers/toPropertyKey.js"(exports, module) {
    var _typeof = require_typeof()["default"];
    var toPrimitive = require_toPrimitive();
    function toPropertyKey(t) {
      var i = toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    module.exports = toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/defineProperty.js
var require_defineProperty = __commonJS({
  "node_modules/@babel/runtime/helpers/defineProperty.js"(exports, module) {
    var toPropertyKey = require_toPropertyKey();
    function _defineProperty(e, r, t) {
      return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
        value: t,
        enumerable: true,
        configurable: true,
        writable: true
      }) : e[r] = t, e;
    }
    module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/objectSpread2.js
var require_objectSpread2 = __commonJS({
  "node_modules/@babel/runtime/helpers/objectSpread2.js"(exports, module) {
    var defineProperty = require_defineProperty();
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread2(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    module.exports = _objectSpread2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/rc-picker/lib/locale/common.js
var require_common = __commonJS({
  "node_modules/rc-picker/lib/locale/common.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.commonLocale = void 0;
    var commonLocale = exports.commonLocale = {
      yearFormat: "YYYY",
      dayFormat: "D",
      cellMeridiemFormat: "A",
      monthBeforeYear: true
    };
  }
});

// node_modules/rc-picker/lib/locale/ko_KR.js
var require_ko_KR2 = __commonJS({
  "node_modules/rc-picker/lib/locale/ko_KR.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _objectSpread2 = _interopRequireDefault(require_objectSpread2());
    var _common = require_common();
    var locale = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, _common.commonLocale), {}, {
      locale: "ko_KR",
      today: "오늘",
      now: "현재 시각",
      backToToday: "오늘로 돌아가기",
      ok: "확인",
      clear: "지우기",
      week: "주",
      month: "월",
      year: "년",
      timeSelect: "시간 선택",
      dateSelect: "날짜 선택",
      monthSelect: "달 선택",
      yearSelect: "연 선택",
      decadeSelect: "연대 선택",
      yearFormat: "YYYY년",
      dateFormat: "YYYY-MM-DD",
      dateTimeFormat: "YYYY-MM-DD HH:mm:ss",
      monthBeforeYear: false,
      previousMonth: "이전 달 (PageUp)",
      nextMonth: "다음 달 (PageDown)",
      previousYear: "이전 해 (Control + left)",
      nextYear: "다음 해 (Control + right)",
      previousDecade: "이전 연대",
      nextDecade: "다음 연대",
      previousCentury: "이전 세기",
      nextCentury: "다음 세기"
    });
    var _default = exports.default = locale;
  }
});

// node_modules/antd/lib/time-picker/locale/ko_KR.js
var require_ko_KR3 = __commonJS({
  "node_modules/antd/lib/time-picker/locale/ko_KR.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var locale = {
      placeholder: "시간 선택",
      rangePlaceholder: ["시작 시간", "종료 시간"]
    };
    var _default = exports.default = locale;
  }
});

// node_modules/antd/lib/date-picker/locale/ko_KR.js
var require_ko_KR4 = __commonJS({
  "node_modules/antd/lib/date-picker/locale/ko_KR.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _ko_KR = _interopRequireDefault(require_ko_KR2());
    var _ko_KR2 = _interopRequireDefault(require_ko_KR3());
    var locale = {
      lang: Object.assign({
        placeholder: "날짜 선택",
        yearPlaceholder: "연도 선택",
        quarterPlaceholder: "분기 선택",
        monthPlaceholder: "월 선택",
        weekPlaceholder: "주 선택",
        rangePlaceholder: ["시작일", "종료일"],
        rangeYearPlaceholder: ["시작 연도", "종료 연도"],
        rangeMonthPlaceholder: ["시작 월", "종료 월"],
        rangeQuarterPlaceholder: ["시작 분기", "종료 분기"],
        rangeWeekPlaceholder: ["시작 주", "종료 주"],
        shortWeekDays: ["일", "월", "화", "수", "목", "금", "토"],
        shortMonths: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"]
      }, _ko_KR.default),
      timePickerLocale: Object.assign({}, _ko_KR2.default)
    };
    var _default = exports.default = locale;
  }
});

// node_modules/antd/lib/calendar/locale/ko_KR.js
var require_ko_KR5 = __commonJS({
  "node_modules/antd/lib/calendar/locale/ko_KR.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _ko_KR = _interopRequireDefault(require_ko_KR4());
    var _default = exports.default = _ko_KR.default;
  }
});

// node_modules/antd/lib/locale/ko_KR.js
var require_ko_KR6 = __commonJS({
  "node_modules/antd/lib/locale/ko_KR.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _ko_KR = _interopRequireDefault(require_ko_KR());
    var _ko_KR2 = _interopRequireDefault(require_ko_KR5());
    var _ko_KR3 = _interopRequireDefault(require_ko_KR4());
    var _ko_KR4 = _interopRequireDefault(require_ko_KR3());
    var typeTemplate = "${label} 유효하지 않은 ${type}";
    var localeValues = {
      locale: "ko",
      Pagination: _ko_KR.default,
      DatePicker: _ko_KR3.default,
      TimePicker: _ko_KR4.default,
      Calendar: _ko_KR2.default,
      global: {
        placeholder: "선택하세요"
      },
      Table: {
        filterTitle: "필터 메뉴",
        filterConfirm: "확인",
        filterReset: "초기화",
        filterEmptyText: "필터 없음",
        filterCheckAll: "전체 선택",
        filterSearchPlaceholder: "필터 검색",
        emptyText: "데이터 없음",
        selectAll: "전체 선택",
        selectInvert: "선택 반전",
        selectNone: "없음",
        selectionAll: "전체 선택",
        sortTitle: "정렬",
        expand: "펼치기",
        collapse: "접기",
        triggerDesc: "내림차순으로 정렬하기",
        triggerAsc: "오름차순으로 정렬하기",
        cancelSort: "정렬 취소하기"
      },
      Tour: {
        Next: "다음",
        Previous: "이전",
        Finish: "종료"
      },
      Modal: {
        okText: "확인",
        cancelText: "취소",
        justOkText: "확인"
      },
      Popconfirm: {
        okText: "확인",
        cancelText: "취소"
      },
      Transfer: {
        titles: ["", ""],
        searchPlaceholder: "여기에 검색하세요",
        itemUnit: "개",
        itemsUnit: "개",
        remove: "삭제",
        selectCurrent: "현재 페이지 선택",
        removeCurrent: "현재 페이지 삭제",
        selectAll: "전체 선택",
        removeAll: "전체 삭제",
        selectInvert: "선택 반전"
      },
      Upload: {
        uploading: "업로드 중...",
        removeFile: "파일 삭제",
        uploadError: "업로드 실패",
        previewFile: "파일 미리보기",
        downloadFile: "파일 다운로드"
      },
      Empty: {
        description: "데이터 없음"
      },
      Icon: {
        icon: "아이콘"
      },
      Text: {
        edit: "수정",
        copy: "복사",
        copied: "복사 됨",
        expand: "확장"
      },
      Form: {
        optional: "(선택사항)",
        defaultValidateMessages: {
          default: "필드 유효성 검사 오류 ${label}",
          required: "${label} 값을 입력해 주세요",
          enum: "${label} [${enum}] 중에 하나여야 합니다",
          whitespace: "${label} 비워둘 수 없습니다",
          date: {
            format: "${label} 유효하지 않은 날짜 형식입니다",
            parse: "${label} 날짜 형식으로 변환될 수 없습니다",
            invalid: "${label} 유효하지 않은 날짜입니다"
          },
          types: {
            string: typeTemplate,
            method: typeTemplate,
            array: typeTemplate,
            object: typeTemplate,
            number: typeTemplate,
            date: typeTemplate,
            boolean: typeTemplate,
            integer: typeTemplate,
            float: typeTemplate,
            regexp: typeTemplate,
            email: typeTemplate,
            url: typeTemplate,
            hex: typeTemplate
          },
          string: {
            len: "${label} ${len}글자여야 합니다",
            min: "${label} 적어도 ${min}글자 이상이어야 합니다",
            max: "${label} ${max}글자 이하여야 합니다",
            range: "${label} ${min}-${max}글자 사이어야 합니다"
          },
          number: {
            len: "${label} 값은 ${len}이어야 합니다",
            min: "${label} 최솟값은 ${min}입니다",
            max: "${label} 최댓값은 ${max}입니다",
            range: "${label} 값은 ${min}-${max} 사이어야 합니다"
          },
          array: {
            len: "${len}이어야 합니다 ${label}",
            min: "최소 ${min}이어야 합니다 ${label}",
            max: "최대 ${max}이어야 합니다 ${label}",
            range: "${label} ${min}-${max} 사이어야 합니다"
          },
          pattern: {
            mismatch: "${label} ${pattern} 패턴과 일치하지 않습니다"
          }
        }
      },
      Image: {
        preview: "미리보기"
      },
      QRCode: {
        expired: "만료된 QR 코드",
        refresh: "새로고침"
      },
      ColorPicker: {
        presetEmpty: "미정",
        transparent: "투명",
        singleColor: "단색",
        gradientColor: "그라데이션"
      }
    };
    var _default = exports.default = localeValues;
  }
});

// node_modules/antd/locale/ko_KR.js
var require_ko_KR7 = __commonJS({
  "node_modules/antd/locale/ko_KR.js"(exports, module) {
    module.exports = require_ko_KR6();
  }
});
export default require_ko_KR7();
//# sourceMappingURL=antd_locale_ko_KR.js.map
